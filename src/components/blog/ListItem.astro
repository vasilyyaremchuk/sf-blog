---
import type { ImageMetadata } from 'astro';
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import PostTags from '~/components/blog/Tags.astro';

import { APP_BLOG } from 'astrowind:config';
import type { Post } from '~/types';

import { getPermalink } from '~/utils/permalinks';
import { findImage } from '~/utils/images';
import { getFormattedDate } from '~/utils/utils';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const image = (await findImage(post.image)) as ImageMetadata | undefined;

const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';
---

<article
  class={`max-w-md mx-auto md:max-w-none grid gap-6 md:gap-8 intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade hover:shadow-lg transition-all duration-300 rounded-2xl p-6 border border-gray-100 dark:border-gray-800 bg-white dark:bg-gray-900/50 backdrop-blur-sm ${image ? 'md:grid-cols-2' : ''}`}
>
  {
    image &&
      (link ? (
        <a class="relative block group overflow-hidden rounded-xl" href={link ?? 'javascript:void(0)'}>
          <div class="relative h-0 pb-[56.25%] md:pb-[75%] md:h-72 lg:pb-[56.25%] overflow-hidden bg-gray-100 dark:bg-slate-700 rounded-xl shadow-lg group-hover:shadow-xl transition-all duration-300">
            {image && (
              <Image
                src={image}
                class="absolute inset-0 object-cover w-full h-full mb-6 rounded-xl shadow-lg bg-gray-100 dark:bg-slate-700 group-hover:scale-105 transition-transform duration-300"
                widths={[400, 900]}
                width={900}
                sizes="(max-width: 900px) 400px, 900px"
                alt={post.title}
                aspectRatio="16:9"
                loading="lazy"
                decoding="async"
              />
            )}
          </div>
        </a>
      ) : (
        <div class="relative h-0 pb-[56.25%] md:pb-[75%] md:h-72 lg:pb-[56.25%] overflow-hidden bg-gray-100 dark:bg-slate-700 rounded-xl shadow-lg">
          {image && (
            <Image
              src={image}
              class="absolute inset-0 object-cover w-full h-full mb-6 rounded-xl shadow-lg bg-gray-100 dark:bg-slate-700"
              widths={[400, 900]}
              width={900}
              sizes="(max-width: 900px) 400px, 900px"
              alt={post.title}
              aspectRatio="16:9"
              loading="lazy"
              decoding="async"
            />
          )}
        </div>
      ))
  }
  <div class="mt-2">
    <header>
      <div class="mb-3">
        <div class="flex flex-wrap items-center gap-3 text-sm text-gray-500 dark:text-gray-400">
          <div class="flex items-center gap-1.5">
            <Icon name="tabler:clock" class="w-4 h-4" />
            <time datetime={String(post.publishDate)} class="font-medium">{getFormattedDate(post.publishDate)}</time>
          </div>
          {
            post.author && (
              <div class="flex items-center gap-1.5">
                <Icon name="tabler:user" class="w-4 h-4" />
                <span class="font-medium">{post.author.replaceAll('-', ' ')}</span>
              </div>
            )
          }
          {
            post.category && (
              <a 
                class="flex items-center gap-1.5 px-2.5 py-1 bg-blue-50 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 rounded-full text-xs font-medium hover:bg-blue-100 dark:hover:bg-blue-900/50 transition-colors" 
                href={getPermalink(post.category.slug, 'category')}
              >
                <Icon name="tabler:folder" class="w-3.5 h-3.5" />
                {post.category.title}
              </a>
            )
          }
        </div>
      </div>
      <h2 class="text-xl sm:text-2xl font-bold leading-tight mb-3 font-heading dark:text-slate-100">
        {
          link ? (
            <a
              class="inline-block hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200 group-hover:text-blue-600 dark:group-hover:text-blue-400"
              href={link}
            >
              {post.title}
            </a>
          ) : (
            post.title
          )
        }
      </h2>
    </header>

    {post.excerpt && <p class="flex-grow text-gray-600 dark:text-slate-300 text-base leading-relaxed mb-4">{post.excerpt}</p>}
    {
      post.tags && Array.isArray(post.tags) ? (
        <footer class="mt-6 pt-4 border-t border-gray-100 dark:border-gray-700">
          <PostTags tags={post.tags} />
        </footer>
      ) : (
        <Fragment />
      )
    }
  </div>
</article>
